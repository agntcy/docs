{
  "swagger": "2.0",
  "info": {
    "title": "Store Service",
    "version": "v1alpha1"
  },
  "tags": [
    {
      "name": "StoreService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "corev1alpha1Extension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the extension attached to an agent."
        },
        "version": {
          "type": "string",
          "description": "Version of the extension attached to an agent."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with this extension."
        },
        "data": {
          "type": "object",
          "description": "Value of the data.\n\nReference to the data on the content storage.\n This allows model producers and extension\n consumers to leverage the storage layer and\n bypass restrictions on the request size.\n\n NOTE: currently not used\n optional ObjectRef data_ref = 5;"
        }
      },
      "description": "Extensions provide dynamic descriptors for an agent data model.\nFor example, arbitrary data and third-party features can be\ndescribed using extensions.\n\nKey := {name}/{version}\n\nThis is an immutable object."
    },
    "corev1alpha1Locator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the locator. Can be custom or native LocatorType."
        },
        "url": {
          "type": "string",
          "title": "Location URI where this source can be found/accessed.\nSpecs: https://datatracker.ietf.org/doc/html/rfc1738"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with this locator."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the source in bytes pointed by the {url} property."
        },
        "digest": {
          "type": "string",
          "title": "Digest of the source pointed by the {url} property.\nSpecs: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests"
        }
      },
      "description": "Locator points to the artifact locators for an agent data model.\nFor example, this can include a reference to a helm chart.\n\nKey := {type}/{url}\n\nThis is an immutable object."
    },
    "corev1alpha1Object": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Opaque data held by this object. Arbitrary in size.\nReaders should know how to process this value."
        },
        "ref": {
          "$ref": "#/definitions/corev1alpha1ObjectRef",
          "description": "This is only needed in push."
        },
        "agent": {
          "$ref": "#/definitions/v1alpha1Agent",
          "description": "In case ref is pointing to an agent model, this can be set.\nThis is only set on pull."
        }
      },
      "description": "Object maps a given ref to an actual object."
    },
    "corev1alpha1ObjectRef": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "title": "Digest of the object data.\nDigest is used as a globally unique ID of an object.\nSpecs: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests"
        },
        "type": {
          "type": "string",
          "description": "Type of the object. Can be looked up from digest."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the object. Can be looked up from digest."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata associated with this object.\nCan be looked up from digest."
        }
      },
      "description": "Reference to a typed object in the content store."
    },
    "corev1alpha1Signature": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "title": "The signature algorithm used (e.g., \"ECDSA_P256_SHA256\")"
        },
        "signature": {
          "type": "string",
          "title": "Base64-encoded signature"
        },
        "certificate": {
          "type": "string",
          "title": "Base64-encoded signing certificate"
        },
        "contentType": {
          "type": "string",
          "description": "Type of the signature content bundle."
        },
        "contentBundle": {
          "type": "string",
          "description": "Base64-encoded signature bundle produced by the signer.\nIt is up to the client to interpret the content of the bundle."
        },
        "signedAt": {
          "type": "string",
          "title": "Timestamp when signing occurred"
        }
      }
    },
    "corev1alpha1Skill": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata for this skill."
        },
        "categoryUid": {
          "type": "string",
          "format": "uint64",
          "description": "UID of the category."
        },
        "classUid": {
          "type": "string",
          "format": "uint64",
          "description": "UID of the class."
        },
        "categoryName": {
          "type": "string",
          "description": "Optional human-readable name of the category."
        },
        "className": {
          "type": "string",
          "description": "Optional human-readable name of the class."
        }
      },
      "description": "A specific skills that an agent is capable of performing.\nSpecs: https://schema.oasf.agntcy.org/skills.\n\nExample (https://schema.oasf.agntcy.org/skills/contextual_comprehension)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1Agent": {
      "type": "object",
      "properties": {
        "schemaVersion": {
          "type": "string",
          "description": "Schema version of the agent."
        },
        "name": {
          "type": "string",
          "description": "Name of the agent."
        },
        "version": {
          "type": "string",
          "description": "Version of the agent."
        },
        "description": {
          "type": "string",
          "description": "Description of the agent."
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of agentâ€™s authors in the form of `author-name \u003cauthor-email\u003e`."
        },
        "createdAt": {
          "type": "string",
          "title": "Creation timestamp of the agent in the RFC3339 format.\nSpecs: https://www.rfc-editor.org/rfc/rfc3339.html"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata associated with this agent."
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Skill"
          },
          "description": "List of skills that this agent can perform."
        },
        "locators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Locator"
          },
          "description": "List of source locators where this agent can be found or used from."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Extension"
          },
          "description": "List of extensions that describe this agent and its capabilities\nand constraints more in depth."
        },
        "signature": {
          "$ref": "#/definitions/corev1alpha1Signature",
          "description": "Signature attached to this agent."
        }
      },
      "description": "Data model defines a schema for versioned AI agent content representation.\nThe schema provides a way to describe features, constraints, artifact\nlocators, and other relevant details of an agent.\n\nKey := {name} - newest release\nKey := {name}:{version} - newest versioned release\nKey := {name}@{digest} - exact release\nKey := {name}:{version}@{digest} - exact versioned release\n\nThis is an immutable object.\n\nMax size: 4 MB (or to fully fit in a single request)\nhttps://opencontainers.org/posts/blog/2024-03-13-image-and-distribution-1-1/#manifest-maximum-size"
    }
  }
}
