{
  "swagger": "2.0",
  "info": {
    "title": "Record",
    "version": "v1alpha1"
  },
  "tags": [
    {
      "name": "RecordObjectConverter"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "corev1alpha1Extension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the extension attached to an agent."
        },
        "version": {
          "type": "string",
          "description": "Version of the extension attached to an agent."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with this extension."
        },
        "data": {
          "type": "object",
          "description": "Value of the data.\n\nReference to the data on the content storage.\n This allows model producers and extension\n consumers to leverage the storage layer and\n bypass restrictions on the request size.\n\n NOTE: currently not used\n optional ObjectRef data_ref = 5;"
        }
      },
      "description": "Extensions provide dynamic descriptors for an agent data model.\nFor example, arbitrary data and third-party features can be\ndescribed using extensions.\n\nKey := {name}/{version}\n\nThis is an immutable object."
    },
    "corev1alpha1Locator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the locator. Can be custom or native LocatorType."
        },
        "url": {
          "type": "string",
          "title": "Location URI where this source can be found/accessed.\nSpecs: https://datatracker.ietf.org/doc/html/rfc1738"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with this locator."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the source in bytes pointed by the {url} property."
        },
        "digest": {
          "type": "string",
          "title": "Digest of the source pointed by the {url} property.\nSpecs: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests"
        }
      },
      "description": "Locator points to the artifact locators for an agent data model.\nFor example, this can include a reference to a helm chart.\n\nKey := {type}/{url}\n\nThis is an immutable object."
    },
    "corev1alpha1Signature": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "title": "The signature algorithm used (e.g., \"ECDSA_P256_SHA256\")"
        },
        "signature": {
          "type": "string",
          "title": "Base64-encoded signature"
        },
        "certificate": {
          "type": "string",
          "title": "Base64-encoded signing certificate"
        },
        "contentType": {
          "type": "string",
          "description": "Type of the signature content bundle."
        },
        "contentBundle": {
          "type": "string",
          "description": "Base64-encoded signature bundle produced by the signer.\nIt is up to the client to interpret the content of the bundle."
        },
        "signedAt": {
          "type": "string",
          "title": "Timestamp when signing occurred"
        }
      }
    },
    "corev1alpha1Skill": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata for this skill."
        },
        "categoryUid": {
          "type": "string",
          "format": "uint64",
          "description": "UID of the category."
        },
        "classUid": {
          "type": "string",
          "format": "uint64",
          "description": "UID of the class."
        },
        "categoryName": {
          "type": "string",
          "description": "Optional human-readable name of the category."
        },
        "className": {
          "type": "string",
          "description": "Optional human-readable name of the class."
        }
      },
      "description": "A specific skills that an agent is capable of performing.\nSpecs: https://schema.oasf.agntcy.org/skills.\n\nExample (https://schema.oasf.agntcy.org/skills/contextual_comprehension)"
    },
    "corev1alpha2Extension": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the extension."
        },
        "name": {
          "type": "string",
          "title": "Name of the extension.\nCan be used as a fully qualified name.\nFor example, \"org.agntcy.oasf.schema/features/\u003cfeature-name\u003e\""
        },
        "version": {
          "type": "string",
          "description": "Version of the extension."
        },
        "data": {
          "type": "object",
          "description": "Data attached to the extension.\nUsually a JSON-embedded object."
        }
      },
      "description": "Extensions provide a generic way to attach additional information\nabout an agent to the record. For example, application-specific \ndetails can be provided using an extension."
    },
    "corev1alpha2Locator": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the locator."
        },
        "type": {
          "type": "string",
          "description": "Type of the locator.\nSupports custom types.\nNative types are defined in the LocatorType."
        },
        "url": {
          "type": "string",
          "title": "Location where the source can be found at.\nSpecs: https://datatracker.ietf.org/doc/html/rfc1738"
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the source in bytes pointed by the {url} property."
        },
        "digest": {
          "type": "string",
          "title": "Digest of the source pointed by the {url} property.\nSpecs: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests"
        }
      },
      "description": "Locator points to the source where agent can be found at.\nFor example, a locator can be a link to a helm chart."
    },
    "corev1alpha2Signature": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the signature."
        },
        "signedAt": {
          "type": "string",
          "title": "Signing timestamp of the agent in the RFC3339 format.\nSpecs: https://www.rfc-editor.org/rfc/rfc3339.html"
        },
        "algorithm": {
          "type": "string",
          "description": "The signature algorithm used (e.g., \"ECDSA_P256_SHA256\")."
        },
        "signature": {
          "type": "string",
          "description": "Base64-encoded signature."
        },
        "certificate": {
          "type": "string",
          "description": "Base64-encoded signing certificate."
        },
        "contentType": {
          "type": "string",
          "description": "Type of the signature content bundle."
        },
        "contentBundle": {
          "type": "string",
          "description": "Base64-encoded signature bundle produced by the signer.\nIt is up to the client to interpret the content of the bundle."
        }
      },
      "description": "Signature provides the signing and verification\ndetails about the agent record."
    },
    "corev1alpha2Skill": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the skill."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of the skill."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name of the skill."
        }
      },
      "title": "A specific skills that an agent is capable of performing.\nSupported skills: https://schema.oasf.agntcy.org/skills"
    },
    "objectmanagerRecordObject": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string",
          "description": "CID of the record."
        },
        "type": {
          "$ref": "#/definitions/objectmanagerRecordObjectType",
          "description": "Type of the record."
        },
        "record": {
          "$ref": "#/definitions/objectmanagerRecordObjectData",
          "description": "Data of the record."
        }
      },
      "description": "Unifies different agent records into a single object.\nAllows to handle different versions of record objects\nin a single way, without worrying about the schema.\n\nRecordObject and Object are composable types."
    },
    "objectmanagerRecordObjectData": {
      "type": "object",
      "properties": {
        "recordV1alpha1": {
          "$ref": "#/definitions/v1alpha1Agent"
        },
        "recordV1alpha2": {
          "$ref": "#/definitions/v1alpha2Record"
        }
      }
    },
    "objectmanagerRecordObjectType": {
      "type": "string",
      "enum": [
        "RECORD_OBJECT_TYPE_UNSPECIFIED",
        "RECORD_OBJECT_TYPE_OASF_V1ALPHA1_JSON",
        "RECORD_OBJECT_TYPE_OASF_V1ALPHA2_JSON"
      ],
      "default": "RECORD_OBJECT_TYPE_UNSPECIFIED",
      "title": "- RECORD_OBJECT_TYPE_UNSPECIFIED: invalid type, should not be used"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storev1alpha2Object": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string",
          "title": "Globally-unique content identifier of the object.\nEncodes fully-qualified type of the object as part of \"codec\".\nSpecs: https://github.com/multiformats/cid"
        },
        "type": {
          "$ref": "#/definitions/storev1alpha2ObjectType",
          "description": "Type of the object.\nCan be extracted from CID."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the object."
        },
        "createdAt": {
          "type": "string",
          "title": "Creation timestamp of the object in the RFC3339 format.\nSpecs: https://www.rfc-editor.org/rfc/rfc3339.html"
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the object in bytes."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Opaque data held by this object.\nClients can use {type} to handle processing."
        }
      },
      "description": "Object is a generic data structure that can hold\narbitrary data. It is used to store and associate\nobjects in a content-addressable store."
    },
    "storev1alpha2ObjectType": {
      "type": "string",
      "enum": [
        "OBJECT_TYPE_UNSPECIFIED",
        "OBJECT_TYPE_RAW"
      ],
      "default": "OBJECT_TYPE_UNSPECIFIED",
      "description": "Defines a list of supported object data types.\nSome values may be reserved for future use.\nThese types are used as a \"codec\" in the CID.\n\n - OBJECT_TYPE_UNSPECIFIED: invalid type, should not be used\n - OBJECT_TYPE_RAW: Common Object Types"
    },
    "v1alpha1Agent": {
      "type": "object",
      "properties": {
        "schemaVersion": {
          "type": "string",
          "description": "Schema version of the agent."
        },
        "name": {
          "type": "string",
          "description": "Name of the agent."
        },
        "version": {
          "type": "string",
          "description": "Version of the agent."
        },
        "description": {
          "type": "string",
          "description": "Description of the agent."
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of agent’s authors in the form of `author-name \u003cauthor-email\u003e`."
        },
        "createdAt": {
          "type": "string",
          "title": "Creation timestamp of the agent in the RFC3339 format.\nSpecs: https://www.rfc-editor.org/rfc/rfc3339.html"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata associated with this agent."
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Skill"
          },
          "description": "List of skills that this agent can perform."
        },
        "locators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Locator"
          },
          "description": "List of source locators where this agent can be found or used from."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1Extension"
          },
          "description": "List of extensions that describe this agent and its capabilities\nand constraints more in depth."
        },
        "signature": {
          "$ref": "#/definitions/corev1alpha1Signature",
          "description": "Signature attached to this agent."
        }
      },
      "description": "Data model defines a schema for versioned AI agent content representation.\nThe schema provides a way to describe features, constraints, artifact\nlocators, and other relevant details of an agent.\n\nKey := {name} - newest release\nKey := {name}:{version} - newest versioned release\nKey := {name}@{digest} - exact release\nKey := {name}:{version}@{digest} - exact versioned release\n\nThis is an immutable object.\n\nMax size: 4 MB (or to fully fit in a single request)\nhttps://opencontainers.org/posts/blog/2024-03-13-image-and-distribution-1-1/#manifest-maximum-size"
    },
    "v1alpha2Record": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the record."
        },
        "name": {
          "type": "string",
          "description": "Name of the agent."
        },
        "version": {
          "type": "string",
          "description": "Version of the agent."
        },
        "description": {
          "type": "string",
          "description": "Description of the agent."
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of agent’s authors, e.g. in the form of `author-name \u003cauthor-email\u003e`."
        },
        "createdAt": {
          "type": "string",
          "title": "Creation timestamp of the agent in the RFC3339 format.\nSpecs: https://www.rfc-editor.org/rfc/rfc3339.html"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha2Skill"
          },
          "description": "List of skills that the agent can perform."
        },
        "locators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha2Locator"
          },
          "description": "List of source locators where the agent can be found or used from."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha2Extension"
          },
          "description": "Additional information attached to the agent.\nExtensions are used to generically extend the agent's functionality."
        },
        "signature": {
          "$ref": "#/definitions/corev1alpha2Signature",
          "description": "Security signature of the agent."
        },
        "previousRecordCid": {
          "type": "string",
          "description": "Reference to the previous agent record, if any.\nUsed to link the agent record to its previous versions.\nField number is explicitly reserved for extenability."
        }
      },
      "description": "Record defines a schema for versioned AI agent content representation.\nThe schema provides a way to describe an agent in a structured format.\n\nThis is a versioned gRPC-based OASF schema.\n\nMax size: 4 MB (or to fully fit in a single request)\nIt may be required to support larger record size in the future.\n\nRecords are stored in a content-addressable store.\nRecords can be indexed for quick lookups and searches\nto avoid unnecessary data transfer.\n\nAll records are referenced by a globally-unique content identifier (CID).\nSpecs: https://github.com/multiformats/cid"
    }
  }
}
