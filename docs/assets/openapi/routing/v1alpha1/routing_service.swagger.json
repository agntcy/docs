{
  "swagger": "2.0",
  "info": {
    "title": "routing/v1alpha1/routing_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RoutingService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "ListResponseItem": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Labels associated with a given object"
        },
        "labelCounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Optionally sends count details about individual skill.\nThis is only set when querying labels or our own current peer.\nFor record requests, only returns the data about that record."
        },
        "peer": {
          "$ref": "#/definitions/routingv1alpha1Peer",
          "description": "Peer that returned this object."
        },
        "record": {
          "$ref": "#/definitions/corev1alpha1ObjectRef",
          "description": "Found object if any.\nIf empty, then only the labels are important."
        }
      }
    },
    "corev1alpha1ObjectRef": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "title": "Digest of the object data.\nDigest is used as a globally unique ID of an object.\nSpecs: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests"
        },
        "type": {
          "type": "string",
          "description": "Type of the object. Can be looked up from digest."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Size of the object. Can be looked up from digest."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata associated with this object.\nCan be looked up from digest."
        }
      },
      "description": "Reference to a typed object in the content store."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "routingv1alpha1ListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListResponseItem"
          },
          "title": "Returned items that match a given request"
        }
      }
    },
    "routingv1alpha1Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of a given peer."
        },
        "addrs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiaddrs for a given peer."
        },
        "connection": {
          "$ref": "#/definitions/v1alpha1ConnectionType",
          "description": "Used to signal the sender's connection capabilities to the peer."
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1ConnectionType": {
      "type": "string",
      "enum": [
        "CONNECTION_TYPE_NOT_CONNECTED",
        "CONNECTION_TYPE_CONNECTED",
        "CONNECTION_TYPE_CAN_CONNECT",
        "CONNECTION_TYPE_CANNOT_CONNECT"
      ],
      "default": "CONNECTION_TYPE_NOT_CONNECTED",
      "title": "- CONNECTION_TYPE_NOT_CONNECTED: Sender does not have a connection to peer, and no extra information (default)\n - CONNECTION_TYPE_CONNECTED: Sender has a live connection to peer\n - CONNECTION_TYPE_CAN_CONNECT: Sender recently connected to peer\n - CONNECTION_TYPE_CANNOT_CONNECT: Sender made strong effort to connect to peer repeatedly but failed"
    }
  }
}
