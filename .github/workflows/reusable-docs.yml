# SPDX-FileCopyrightText: Copyright (c) 2025 Cisco and/or its affiliates.
# SPDX-License-Identifier: Apache-2.0

name: Documentation

on:
  workflow_call:
    inputs:
      deploy:
        description: 'Deploy documentation artifacts'
        required: true
        type: boolean
        default: false
      version:
        description: 'Version to use for documentation artifacts'
        required: true
        type: string
        default: dev

  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy documentation artifacts'
        required: true
        type: boolean
        default: false
      version:
        description: 'Version to use for documentation artifacts'
        required: true
        type: string
        default: dev

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: Setup Taskfile
        shell: bash
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup UV
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Update GITHUB_PATH
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build docs
        shell: bash
        env:
          VERSION: ${{ inputs.version }}
        run: |
          task build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: docs-website
          path: ./.build/site

  deploy:
    name: Deploy artifacts
    if: ${{ inputs.deploy == true || inputs.deploy == 'true' }}
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: docs-website
